var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = HypothesisTestsExperimentalRedo","category":"page"},{"location":"#HypothesisTestsExperimentalRedo","page":"Home","title":"HypothesisTestsExperimentalRedo","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HypothesisTestsExperimentalRedo.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [HypothesisTestsExperimentalRedo]","category":"page"},{"location":"#HypothesisTestsExperimentalRedo.HypothesisTest","page":"Home","title":"HypothesisTestsExperimentalRedo.HypothesisTest","text":"mutable struct HypothesisTest{T}\n    H0::NullHypothesis\n    test::T\n    data::Vector{SummaryStats}\n    level::Real\nend\n\nA struct to hold all information required to perform a hypothesis test. The results are computed when needed to ensure that the results never  go out of sync with the test input.\n\n\n\n\n\n","category":"type"},{"location":"#HypothesisTestsExperimentalRedo.NullHypothesis","page":"Home","title":"HypothesisTestsExperimentalRedo.NullHypothesis","text":"NullHypothesis(POI, operator, value) NullHypothesis(operator, value)\n\nA struct to hold a null hypothesis.  POI can be a string or a symbol, and represents the P̲arameter O̲f I̲nterest. It defaults to \"POI\", but should be set to something to convey information  about what the parameter of interest represents, e.g. \"μ₀\" when the sample  mean is being tested.\n\nFieldnames:\n\nPOI: Only important for pretty printing.\noperator: Determines if the test is one or two sided, and to which side.\nvalue: The value that is compared with the parameter of interest.\n\nExamples\n\njulia> NullHypothesis(≤, 50)\nPOI ≤ 50\n\njulia> NullHypothesis(>=, 50)\nPOI ≥ 50\n\njulia> NullHypothesis(\"μ₀\", >, 50)\nμ₀ > 50\n\njulia> NullHypothesis(:μ₀, ==, 50)\nμ₀ = 50\n\n\n\n\n\n","category":"type"},{"location":"#HypothesisTestsExperimentalRedo.OneSample","page":"Home","title":"HypothesisTestsExperimentalRedo.OneSample","text":"OneSample(paired::Bool)\n\nA test variant that indicates that a single dataset is to be tested.\n\nAn instance of OneSample is passed to the relevant test (e.g. TTest). The relevant test is then passed to a HypothesisTest.\n\nThe aargument paired determines if the test is interpreted as paired.\n\n\n\n\n\n","category":"type"},{"location":"#HypothesisTestsExperimentalRedo.SummaryStats","page":"Home","title":"HypothesisTestsExperimentalRedo.SummaryStats","text":"SummaryStats(x::Vector{<:Real}) SummaryStats(n, mean, std)\n\nA struct to hold the summary statistics about a sample  required to perform statistical hypothesis tests.\n\nFieldnames:\n\nn: \tnumber of samples  \nmean: \tthe sample mean  \nstd: \tthe sample standard deviation  \n\nExamples:\n\njulia> ss = SummaryStats(randn(100))\nSummary Statistics for 100 observations: \n------------------------------\nSample mean = -0.01349895434299083\nSample std dev = 1.0247055651499521\n\n\njulia> ss.n, ss.mean, ss.std\n(100, -0.01349895434299083, 1.0247055651499521)\n\njulia> SummaryStats(100, 10, 0.5)\nSummary Statistics for 100 observations:\n------------------------------\nSample mean = 10\nSample std dev = 0.5\n\n\n\n\n\n","category":"type"},{"location":"#HypothesisTestsExperimentalRedo.TTest","page":"Home","title":"HypothesisTestsExperimentalRedo.TTest","text":"TTest(OneSample(false))\nTTest(OneSample(true))\nTTest(TwoSample(false))\nTTest(TwoSample(true))\n\nA struct used to specify that a T-test should be performed. There are 2 types of T-test: OneSample - for testing a hypothesis regarding the mean of a single dataset TwoSample - for testing a hypothesis regarding the mean difference of two datasets\n\nFor a OneSample test, the boolean argument specifies if the test is paired. For a TwoSample test, the boolean argument specifies if equal variance should be assumed.\n\n\n\n\n\n","category":"type"},{"location":"#HypothesisTestsExperimentalRedo.TwoSample","page":"Home","title":"HypothesisTestsExperimentalRedo.TwoSample","text":"TwoSample(equalvariance::Bool)\n\nA test variant that indicates that the difference between two datasets is to be tested.\n\nAn instance of OneSample is passed to the relevant test (e.g. TTest). The relevant test is then passed to a HypothesisTest.\n\nThe argument equalvariance determines if equal variance should be assumed.\n\n\n\n\n\n","category":"type"},{"location":"#HypothesisTestsExperimentalRedo.checktest-Tuple{HypothesisTestsExperimentalRedo.HypothesisTest}","page":"Home","title":"HypothesisTestsExperimentalRedo.checktest","text":"checktest(ht::HypothesisTest)\n\nA function that takes a HypothesisTest and returns it if all tests are passed. Test are defined for each testtype. This function should be used for the convenience-constructurs,  for the public API\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.dist_apparent-Tuple{HypothesisTestsExperimentalRedo.NullHypothesis, HypothesisTestsExperimentalRedo.TestType, Vector{HypothesisTestsExperimentalRedo.SummaryStats}}","page":"Home","title":"HypothesisTestsExperimentalRedo.dist_apparent","text":"dist_apparent(H0::NullHypothesis, testtype::TestType, data::Vector{SummaryStats})\ndist_apparent(ht::HypothesisTest)\n\nFor any test, compute the distribution indicated by the data samples.\n\nIf the test-type is e.g. a t-test, then the apparent distribution  will the the scaled and shifted TDist that best corresponds to the data.\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.dist_under_H0-Tuple{HypothesisTestsExperimentalRedo.NullHypothesis, HypothesisTestsExperimentalRedo.TestType, Vector{HypothesisTestsExperimentalRedo.SummaryStats}}","page":"Home","title":"HypothesisTestsExperimentalRedo.dist_under_H0","text":"dist_under_H0(H0::NullHypothesis, testtype::TestType, data::Vector{SummaryStats})\ndist_under_H0(ht::HypothesisTest)\n\nFor any test, compute the distribution under the null-hypothesis.  Used to compared to the point-estimate to get p-values. This package deals only with the actual distributions, and does at no point use normalized ditributions.\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.parameter_of_interest-Tuple{HypothesisTestsExperimentalRedo.HypothesisTest}","page":"Home","title":"HypothesisTestsExperimentalRedo.parameter_of_interest","text":"parameterofinterest(x)\n\nA function to print the parameter of interest in human form for displaying HypothesisTest,  e.g. \"Mean\" for a TTest\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.point_est-Tuple{HypothesisTestsExperimentalRedo.TestType, Vector{HypothesisTestsExperimentalRedo.SummaryStats}}","page":"Home","title":"HypothesisTestsExperimentalRedo.point_est","text":"    point_est(testtype::TestType, data::Vector{SummaryStats})\n    point_est(ht::HypothesisTest)\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.pval-Tuple{HypothesisTestsExperimentalRedo.NullHypothesis, Distributions.Distribution, Real}","page":"Home","title":"HypothesisTestsExperimentalRedo.pval","text":"pval(H0::NullHypothesis, dist::Distribution, pointestimate::Real)\npval(ht::HypothesisTest)\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.reject_H0-Tuple{HypothesisTestsExperimentalRedo.HypothesisTest}","page":"Home","title":"HypothesisTestsExperimentalRedo.reject_H0","text":"reject_H0(ht::HypothesisTest)\n\nReturns trueif the p-value is smaller that 1 minus the confidence level,  andfalse` if else.\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.test_statistic-Tuple{HypothesisTestsExperimentalRedo.HypothesisTest}","page":"Home","title":"HypothesisTestsExperimentalRedo.test_statistic","text":"test_statistic(ht::HypothesisTestt\n\nReturn the test statistic of a given hypothesis test ht\n\n\n\n\n\n","category":"method"},{"location":"#HypothesisTestsExperimentalRedo.ttest","page":"Home","title":"HypothesisTestsExperimentalRedo.ttest","text":"ttest(obs1::Vector{<:Real}, obs2::Vector{<:Real}, Δμ₀=0; kwargs...)\n\nTest the null-hypothesis that the difference between the observation means (mean(obs1)-mean(obs2)) is equal to Δμ₀, against the alternative hypothesis  that it is not.\n\nTo perform a one-sided test, set op to one of (>, ≥, ≤ or <).\n\nThe keyword argument equalvariance::Bool determines if equal variance  between the underlying distributions should be assumed.\n\n\n\n\n\n","category":"function"},{"location":"#HypothesisTestsExperimentalRedo.ttest-2","page":"Home","title":"HypothesisTestsExperimentalRedo.ttest","text":"ttest(obs::Vector{<:Real}, μ₀=0; kwargs...)\nttest(obs::Vector{<:Real}, op, μ₀=0; kwargs...)\n\nTest the null-hypothesis that the mean of the observations  is equal to μ₀, against the alternative hypothesis that it is not.\n\nTo perform a one-sided test, set op to one of (>, ≥, ≤ or <).\n\nA paired one-sample t-test is equivalent to a normal one-sample t-test  of the elementwise difference between the datasets (dataset1 .- dataset2). To perform such a test, give dataset1 .- dataset2 as the observations, and  set the keyword argument paired to true to reflect this in the printing.\n\n\n\n\n\n","category":"function"},{"location":"#StatsAPI.confint-Tuple{HypothesisTestsExperimentalRedo.NullHypothesis, Distributions.Distribution}","page":"Home","title":"StatsAPI.confint","text":"confint(H0::NullHypothesis, dist::Distribution; level::Real)\nconfint(ht::HypothesisTest)\n\n\n\n\n\n","category":"method"},{"location":"#StatsAPI.dof-Tuple{HypothesisTestsExperimentalRedo.SummaryStats}","page":"Home","title":"StatsAPI.dof","text":"dof(ss::SummaryStats) = ss.n-1\ndof(data::Vector{SummaryStats}) = sum(dof, data)\n\n\n\n\n\n","category":"method"}]
}
